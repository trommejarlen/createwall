package com.yourplugin.wallbuilder;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.command.TabExecutor;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.util.StringUtil;

import java.util.*;

public class WallBuilderPlugin extends JavaPlugin implements Listener, TabExecutor {

    private final Map<UUID, WallSettings> playerWallSettings = new HashMap<>();

    @Override
    public void onEnable() {
        getServer().getPluginManager().registerEvents(this, this);
        Objects.requireNonNull(getCommand("væg")).setExecutor(this);
        Objects.requireNonNull(getCommand("væg")).setTabCompleter(this);
    }

    @Override
    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (!(sender instanceof Player)) {
            sender.sendMessage("Kun spillere kan bruge denne kommando!");
            return true;
        }

        Player player = (Player) sender;
        if (args.length < 2) {
            player.sendMessage("Brug: /væg <højde> <materiale>");
            return true;
        }

        try {
            int height = Integer.parseInt(args[0]);
            Material material = Material.matchMaterial(args[1].toUpperCase());
            
            if (material == null || !material.isBlock()) {
                player.sendMessage("Ugyldigt materiale!");
                return true;
            }
            
            playerWallSettings.put(player.getUniqueId(), new WallSettings(height, material));
            player.sendMessage("Vægindstillinger opdateret: " + height + " blokke af " + material.name().toLowerCase());
        } catch (NumberFormatException e) {
            player.sendMessage("Højde skal være et tal!");
        }
        return true;
    }

    @EventHandler
    public void onPlayerUseAxe(PlayerInteractEvent event) {
        Player player = event.getPlayer();
        if (player.getInventory().getItemInMainHand().getType() == Material.WOODEN_AXE && event.getClickedBlock() != null) {
            WallSettings settings = playerWallSettings.get(player.getUniqueId());
            if (settings == null) {
                player.sendMessage("Brug /væg <højde> <materiale> først!");
                return;
            }
            
            Block baseBlock = event.getClickedBlock();
            for (int i = 1; i <= settings.height; i++) {
                Block blockAbove = baseBlock.getRelative(0, i, 0);
                blockAbove.setType(settings.material);
            }
        }
    }

    @Override
    public List<String> onTabComplete(CommandSender sender, Command command, String alias, String[] args) {
        if (args.length == 2) {
            List<String> materials = new ArrayList<>();
            for (Material mat : Material.values()) {
                if (mat.isBlock()) {
                    materials.add(mat.name().toLowerCase());
                }
            }
            return StringUtil.copyPartialMatches(args[1], materials, new ArrayList<>());
        }
        return Collections.emptyList();
    }

    static class WallSettings {
        int height;
        Material material;

        public WallSettings(int height, Material material) {
            this.height = height;
            this.material = material;
        }
    }
}
